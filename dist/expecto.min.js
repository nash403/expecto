var Expecto=function(t){"use strict";const e=t=>t.filter((t,e,o)=>e===o.indexOf(t)),o=t=>(e="")=>"function"==typeof e?t.loaders.findIndex(e)>-1:t.loaders.indexOf(e)>-1,n=t=>t.loaders.length>0,s=t=>(o="")=>{t.loaders.push(o),t.loaders=e(t.loaders)},a=t=>(o="")=>{t.loaders=e(t.loaders).filter(t=>t!==o)};class i{constructor(){this.loaders=[]}get isLoading(){return o(this)}get anyLoading(){return n(this)}startLoading(t="",e){if(s(this)(t),e)return new Promise((o,n)=>{e().then(o,n).finally(()=>this.stopLoading(t))})}stopLoading(t=""){a(this)(t)}}const r="Vuex not initialized.",d="loaders",c="VWait";function p({componentName:t=c,namespace:e=d,className:o=[]}){return{name:t,render(t){let e=null;return(e=this.status?this.$slots.spinner:this.empty?this.$slots.empty:this.$slots.default)&&e.length?1===e.length?e[0]:t("div",{class:["expecto"].concat(o)},e):t()},props:{when:{type:[Boolean,String,Function],default:!1},empty:{type:Boolean,default:!1}},computed:{isLoading(){const t=this.$store;if(!t)throw new Error(r);return t.getters[`${e}/isLoading`]},anyLoading(){const t=this.$store;if(!t)throw new Error(r);return t.getters[`${e}/anyLoading`]},status(){return"boolean"==typeof this.when?this.when:this.when?this.isLoading(this.when):this.anyLoading}}}}const l=new i;return t.DEFAULT_NAMESPACE=d,t.ExpectoWrapper=i,t.createComponent=p,t.createVuePlugin=function({namespace:t=d,componentName:e=c,className:o}={}){return n=>{n.prototype.$startLoading=function(e,o){return this.$store.dispatch(`${t}/startLoading`,{loaderId:e,callback:o},{root:!0})},n.prototype.$stopLoading=function(e){this.$store.dispatch(`${t}/stopLoading`,{loaderId:e},{root:!0})},n.prototype.$isLoading=function(e){return this.$store.getters[`${t}/isLoading`](e)},n.prototype.$anyLoading=function(){return this.$store.getters[`${t}/anyLoading`]},n.component(e,p({componentName:e,namespace:t,className:o}))}},t.createVuexPlugin=(t=d)=>(function(e){const o=new i,n="START_LOADER",s="STOP_LOADER";return e.registerModule(t,{namespaced:!0,state:{expecto:o},getters:{isLoading:t=>t.expecto.isLoading,anyLoading:t=>t.expecto.anyLoading},actions:{startLoading:({commit:t},e)=>t(n,e),stopLoading:({commit:t},e)=>t(s,e)},mutations:{[n]:(t,{loaderId:e,callback:o})=>t.expecto.startLoading(e,o),[s](t,{loaderId:e}){t.expecto.stopLoading(e)}}}),o}),t.expecto=l,t}({});
